<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <GenerateRuntimeConfigurationFiles>true</GenerateRuntimeConfigurationFiles>
    <AWSProjectType>Lambda</AWSProjectType>
    <!-- This property makes the build directory similar to a publish directory and helps the AWS .NET Lambda Mock Test Tool find project dependencies. -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <!-- Generate ready to run images during publishing to improve cold start time. -->
    <PublishReadyToRun>true</PublishReadyToRun>
    <UserSecretsId>2a0ce5cc-2dce-40ff-bbe9-54b97e6d183a</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerfileContext>..\..\..</DockerfileContext>
  </PropertyGroup>
  <ItemGroup>
	  <PackageReference Include="Amazon.Lambda.AspNetCoreServer.Hosting" Version="1.7.0" />
    <PackageReference Include="Amazon.Lambda.AspNetCoreServer" Version="9.0.0" />
    <PackageReference Include="AWS.Logger.NLog" Version="3.3.4" />
    <PackageReference Include="AWSSDK.CloudWatchLogs" Version="3.7.305.59" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.19.6" />
  </ItemGroup>
	
  <ItemGroup>
    <ProjectReference Include="..\..\Contexts\Doctor\HealthMed.Doctor.IoC\HealthMed.Doctor.IoC.csproj" />
    <ProjectReference Include="..\..\Contexts\Patient\HealthMed.Patient.IoC\HealthMed.Patient.IoC.csproj" />
  </ItemGroup>

</Project>